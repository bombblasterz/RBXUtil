"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[189],{82155:function(e){e.exports=JSON.parse('{"functions":[{"name":"RegisterComponentsIn","desc":"Registers all the module scripts in `componentsFolder`, so that each module script will be binded to a new component.\\n\\n:::note\\nDescendants aren\'t accounted for. However, folders in `componentsFolder` will be accounted for, as well as nested folders\\nin folders.\\n:::","params":[{"name":"componentsFolder","desc":"","lua_type":"Folder"}],"returns":[],"function_type":"static","source":{"line":136,"path":"packages/Component/init.lua"}},{"name":"IsA","desc":"Returns a boolean indicating if `self` is a component or not.","params":[{"name":"self","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":166,"path":"packages/Component/init.lua"}},{"name":"GetAll","desc":"Returns an array of all components.","params":[],"returns":[{"desc":"","lua_type":"table"}],"function_type":"static","source":{"line":176,"path":"packages/Component/init.lua"}},{"name":"GetFromTags","desc":"Returns a component from `tags`.\\n\\nFor e.g:\\n\\n```lua\\nlocal class = {}\\nclass.Tags = {\\"1\\"}\\n---\\n\\nComponent.new(class)\\nprint(Component.GetFromTags(class.Tags)) --\x3e {...} (class)\\n```","params":[{"name":"tags","desc":"","lua_type":"table"}],"returns":[{"desc":"","lua_type":"Component | nil"}],"function_type":"static","source":{"line":198,"path":"packages/Component/init.lua"}},{"name":"ObserveFromTags","desc":"Works the same as `Component.GetFromTags`,\\texcept returns a promise which is resolved with the valid component found\\nunder `timeout` seconds, if specified. If `timeout` is specified and a valid component was still not found, then the promise \\nwill reject with a `nil` value.\\n\\nFor e.g:\\n\\n```lua\\ntask.delay(2, function()\\n\\t-- Create comp\\n\\tComponent.new(someClass)\\nend)\\n\\nComponent.ObserveFromTags({\\"Example\\"}, 5):andThen(function()\\n\\tprint(\\"Component found!\\")\\nend):catch(function(errorMessage)\\n\\twarn(\\"Component not found under 5 seconds\\")\\nend)\\n\\n--\x3e \\"Component found!\\n```","params":[{"name":"tags","desc":"","lua_type":"tags"},{"name":"timeout","desc":"","lua_type":"number | nil"}],"returns":[{"desc":"","lua_type":"Promise"}],"function_type":"static","source":{"line":241,"path":"packages/Component/init.lua"}},{"name":"GetObjectFromInstance","desc":"Returns an object of any component bound to `instance`.","params":[],"returns":[{"desc":"","lua_type":"table"}],"function_type":"static","source":{"line":310,"path":"packages/Component/init.lua"}},{"name":"new","desc":"Creates and binds a new component to `class`, `class` must have the following required members and methods:\\n\\n| Required members and methods     | Description                          |\\n| ----------- | ------------------------------------ |\\n| `Tags`   | An array of strings ([CollectionService](https://developer.roblox.com/en-us/api-reference/class/CollectionService) tags). |\\n| `.new`  | A constructor method which is called whenever an instance is added or found whose [CollectionService](https://developer.roblox.com/en-us/api-reference/class/CollectionService) tags match `Tags`. The instance is passed as the only argument to this method and is considered \\"bound\\" to the object returned by this method.  |\\n| `:Destroy` | A method which which is called on an object (returned by the constructor method) bound to a instance which no longer has matching CollectionService tags or is destroyed / parented to `nil`.  |\\n\\n:::note\\nIt is expected that the constructor method `.new` returns an object (a table which \\"inherits\\" from `class`). However, it is also\\nsafe to return nothing from the constructor method.\\n:::\\n\\n| Optional lifecycle methods and members     | Description  |\\n| ----------- | ------------------------------------ |\\n| `PreRenderUpdatePriority`  | An `EnumItem` used in calling the `PreRenderUpdate` method, learn more about it [here](https://developer.roblox.com/en-us/api-reference/function/RunService/BindToRenderStep).  |\\n| `:Start`  | A method which is called on an object just after it is created and returned from the constructor method.  |\\n| `:Stop`     | A method which is called on an object bound to an instance whose CollectionService tags no longer matches `Tags`. |\\n| `PostSimulationUpdate`  | A method called every `RunService.Heartbeat` on an object. |\\n| `PreSimulationUpdate`  | A method called every `RunService.Stepped` on an object. |\\n| `PreRenderUpdate`  | A method called every `RunService.RenderStepped` on an object. |\\n\\nExample component class; any part with the `Part` tag will have it\'s brick color change to green and smoothly rotate.\\nOnce the `Part` tag is removed, the part will no longer rotate and have it\'s brick color change to red. There are no\\nlimiations to how many parts can be binded to a component, which means you can have many parts with `Part` tag bound\\nto this funtionality of the class!\\n\\n```lua\\nlocal Part = {Tags = {\\"Part\\"}}\\nPart.__index = Part\\n\\nfunction Part.new(part)\\n\\treturn setmetatable({}, {__index = Part})\\nend\\n\\nfunction Part:Start()\\n\\tself.Instance.BrickColor = BrickColor.Green()\\nend\\n\\nfunction Part:PostSimulationUpdate(deltaTime)\\n\\tself.Instance.CFrame *= CFrame.Angles(0, math.rad(35) * deltaTime, 0)\\nend\\n\\nfunction Part:Stop()\\n\\tself.Instance.BrickColor = BrickColor.Red()\\nend\\n\\nfunction Part:Destroy()\\n\\t\\nend\\n```","params":[{"name":"class","desc":"","lua_type":"table"}],"returns":[],"function_type":"static","source":{"line":378,"path":"packages/Component/init.lua"}},{"name":"GetObjects","desc":"Returns all the active objects in the component.","params":[],"returns":[{"desc":"","lua_type":"table"}],"function_type":"method","tags":["Component"],"source":{"line":460,"path":"packages/Component/init.lua"}},{"name":"Destroy","desc":"Destroys the component and renders it unusuable.\\n\\n:::warning \\nTrivial errors will occur if your code unintentionally works on a destroyed component, \\nonly call this method when you\'re done working with the component!\\n:::","params":[],"returns":[],"function_type":"method","tags":["Component"],"source":{"line":475,"path":"packages/Component/init.lua"}}],"properties":[{"name":"ActiveObjects","desc":"A dictionary of all active component objects.","lua_type":"table","readonly":true,"source":{"line":44,"path":"packages/Component/init.lua"}},{"name":"OnComponentAdded","desc":"A signal which is fired whenever a component is added. ","lua_type":"Signal <componentAdded : Component>","readonly":true,"source":{"line":51,"path":"packages/Component/init.lua"}},{"name":"OnComponentDestroyed","desc":"A signal which is fired whenever a component is destroyed.","lua_type":"Signal <componentDestroyed : Component>","readonly":true,"source":{"line":58,"path":"packages/Component/init.lua"}},{"name":"OnObjectAdded","desc":"A signal which is fired whenever an object is created and returned \\nthrough the constructor method of the class bound to the component.","lua_type":"Signal <objectAdded: table>","tags":["Component"],"readonly":true,"source":{"line":68,"path":"packages/Component/init.lua"}},{"name":"OnObjectDestroyed","desc":"A signal which is fired whenever an object of the class bound to the component\\nis destroyed.","lua_type":"Signal  <objectDestroyed: table>","tags":["Component"],"readonly":true,"source":{"line":78,"path":"packages/Component/init.lua"}},{"name":"Tags","desc":"The reference to the `Tags` table in the class bound to the component.","lua_type":"table","tags":["Component"],"readonly":true,"source":{"line":87,"path":"packages/Component/init.lua"}}],"types":[],"name":"Component","desc":"A class which is used to bind instances to tags and extend their functionality. Components are like binders, but are\\nhandled differently.","source":{"line":36,"path":"packages/Component/init.lua"}}')}}]);