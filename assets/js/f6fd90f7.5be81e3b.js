"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[377],{42202:function(e){e.exports=JSON.parse('{"functions":[{"name":"GetDeltaPosition","desc":"Returns the position of the mouse from the last frame to the current.","params":[],"returns":[{"desc":"","lua_type":"Vector3"}],"function_type":"static","source":{"line":159,"path":"packages/UserInput/Mouse.lua"}},{"name":"CastRay","desc":"Casts a ray from the mouse\'s current position to it\'s position extended `distance` studs, respecting `raycastParams` if provided.","params":[{"name":"raycastParams","desc":"","lua_type":"RaycastParams ?"},{"name":"distance","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"RaycastResult ?"}],"function_type":"static","source":{"line":171,"path":"packages/UserInput/Mouse.lua"}},{"name":"LockToCurrentPosition","desc":"Locks the mouse to it\'s current position.","params":[],"returns":[],"function_type":"static","source":{"line":197,"path":"packages/UserInput/Mouse.lua"}},{"name":"Unlock","desc":"Unlocks the mouse.","params":[],"returns":[],"function_type":"static","source":{"line":217,"path":"packages/UserInput/Mouse.lua"}},{"name":"LockToCenter","desc":"Locks the mouse to the center.","params":[],"returns":[],"function_type":"static","source":{"line":226,"path":"packages/UserInput/Mouse.lua"}},{"name":"AddTargetFilter","desc":"Adds `targetFilter` to the filter list so that they will be filtered out when calculating `Mouse.Hit` and `Mouse.Target`.","params":[{"name":"targetFilter","desc":"","lua_type":"Instance"}],"returns":[],"function_type":"static","source":{"line":248,"path":"packages/UserInput/Mouse.lua"}},{"name":"SetTargetFilterType","desc":"Sets the filter type to `targetFilterType` which is used internally in filtering \\ninstances added through `Mouse.AddTargetFilter` when calculating `Mouse.Hit` and `Mouse.Target`.\\n\\n| EnumItem      | Description                          |\\n| ----------- | ------------------------------------ |\\n| `Enum.RaycastFilterType.Whitelist`       | Only the instance added through `Mouse.AddTargetFilter` will be respected.  |\\n| `Enum.RaycastFilterType.Blacklist`       | The instance added through `Mouse.AddTargetFilter` will be ignored.  |\\n\\nBy default, the filter type is `Enum.RaycastFilterType.Blacklist`.","params":[{"name":"targetFilterType","desc":"","lua_type":"EnumItem"}],"returns":[],"function_type":"static","source":{"line":279,"path":"packages/UserInput/Mouse.lua"}},{"name":"RemoveTargetFilter","desc":"Removes `targetFilter` from the filter list so that it will not be filtered out when calculating `Mouse.Hit` and `Mouse.Target`.","params":[{"name":"targetFilter","desc":"","lua_type":"Instance"}],"returns":[],"function_type":"static","source":{"line":304,"path":"packages/UserInput/Mouse.lua"}},{"name":"Init","desc":"","params":[],"returns":[],"function_type":"static","ignore":true,"source":{"line":324,"path":"packages/UserInput/Mouse.lua"}}],"properties":[{"name":"OnLeftClick","desc":"A signal fired whenever the user left clicks on their mouse. ","lua_type":"Signal <isInputProcessed: boolean>","readonly":true,"source":{"line":43,"path":"packages/UserInput/Mouse.lua"}},{"name":"OnRightClick","desc":"A signal fired whenever the user right clicks on their mouse. ","lua_type":"Signal <isInputProcessed: boolean>","readonly":true,"source":{"line":51,"path":"packages/UserInput/Mouse.lua"}},{"name":"OnScrollClick","desc":"A signal fired whenever the user scroll clicks on their mouse. ","lua_type":"Signal <isInputProcessed: boolean>","readonly":true,"source":{"line":59,"path":"packages/UserInput/Mouse.lua"}},{"name":"OnMove","desc":"A signal fired whenever the user moves their mouse. ","lua_type":"Signal <deltaPosition: Vector3>","readonly":true,"source":{"line":67,"path":"packages/UserInput/Mouse.lua"}},{"name":"OnTargetChange","desc":"A signal which is fired whenever `Mouse.Target` changes.","lua_type":"Signal <newTarget: Instance ?>","readonly":true,"source":{"line":75,"path":"packages/UserInput/Mouse.lua"}},{"name":"TargetFilterType","desc":"By default, the value is `Enum.RaycastFilterType.Blacklist`. Used as the filter type in\\nretrieving `Mouse.Target` and `Mouse.Hit`. \\n\\n:::note\\nThis member should only be set to `Enum.RaycastFilterType.Blacklist` or `Enum.RaycastFilterType.Whitelist`.\\n:::","lua_type":"EnumItem","readonly":true,"source":{"line":88,"path":"packages/UserInput/Mouse.lua"}},{"name":"Hit","desc":"The cframe the mouse hit in the 3D world.","lua_type":"CFrame","readonly":true,"source":{"line":96,"path":"packages/UserInput/Mouse.lua"}},{"name":"UnitRay","desc":"The unit ray from the mouse\'s 2D position to the 3D world.","lua_type":"Ray","readonly":true,"source":{"line":104,"path":"packages/UserInput/Mouse.lua"}},{"name":"X","desc":"The `X` coordinate of the mouse\'s 2D position on the screen.","lua_type":"number","readonly":true,"source":{"line":112,"path":"packages/UserInput/Mouse.lua"}},{"name":"X","desc":"The `Y` coordinate of the mouse\'s 2D position on the screen.","lua_type":"number","readonly":true,"source":{"line":120,"path":"packages/UserInput/Mouse.lua"}},{"name":"Target","desc":"The instance the mouse hit in the 3D world.","lua_type":"Instance ?","readonly":true,"source":{"line":128,"path":"packages/UserInput/Mouse.lua"}},{"name":"Origin","desc":"A CFrame at the camera\'s position, facing the 3D position of the mouse. Equivalent to `CFrame.lookAt(Workspace.CurrentCamera.CFrame.Position, Mouse.Hit.Position)`.","lua_type":"CFrame","readonly":true,"source":{"line":136,"path":"packages/UserInput/Mouse.lua"}}],"types":[],"name":"Mouse","desc":"The mouse module is a superior module designed over the legacy mouse Roblox has provided us. This module \\nshould be used over `player:GetMouse()`.","source":{"line":35,"path":"packages/UserInput/Mouse.lua"}}')}}]);