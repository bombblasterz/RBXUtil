"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[189],{82155:function(e){e.exports=JSON.parse('{"functions":[{"name":"RegisterComponentsIn","desc":"Registers all the children (module scripts) in `componentsFolder`, such that each child will have its\\nown component created and binded to it.\\n\\n:::note\\nFolders nested in `componentsFolder` will also be accounted for.\\n:::","params":[{"name":"componentsFolder","desc":"","lua_type":"Folder"}],"returns":[],"function_type":"static","source":{"line":125,"path":"packages/Component/init.lua"}},{"name":"IsA","desc":"Returns a boolean indicating if `self` is a component or not.","params":[{"name":"self","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":155,"path":"packages/Component/init.lua"}},{"name":"GetAll","desc":"Returns an array of all components.","params":[],"returns":[{"desc":"","lua_type":"table"}],"function_type":"static","source":{"line":165,"path":"packages/Component/init.lua"}},{"name":"GetFromTags","desc":"Returns a component from `tags`.\\n\\nFor e.g:\\n\\n```lua\\nlocal class = {}\\nclass.Tags = {\\"1\\"}\\n---\\n\\nComponent.new(class)\\nprint(Component.GetFromTags(class.Tags)) --\x3e {...} (class)\\n```","params":[{"name":"tags","desc":"","lua_type":"table"}],"returns":[{"desc":"","lua_type":"Component | nil"}],"function_type":"static","source":{"line":187,"path":"packages/Component/init.lua"}},{"name":"ObserveFromTags","desc":"Works the same as `Component.GetFromTags`,\\texcept returns a promise which is resolved with the valid component once a valid component\\nis found under `timeout` seconds, if specified. If `timeout` is specified and a valid component was still not found, then the promise \\nwill reject with a `nil` value.\\n\\nFor e.g:\\n\\n```lua\\ntask.delay(2, function()\\n\\t-- Create comp\\n\\tComponent.new(someClass)\\nend)\\n\\nComponent.ObserveFromTags({\\"Example\\"}, 5):andThen(function()\\n\\tprint(\\"Component found!\\")\\nend):catch(function(errorMessage)\\n\\twarn(\\"Component not found under 5 seconds\\")\\nend)\\n\\n--\x3e \\"Component found!\\n```","params":[{"name":"tags","desc":"","lua_type":"tags"},{"name":"timeout","desc":"","lua_type":"number | nil"}],"returns":[{"desc":"","lua_type":"Promise"}],"function_type":"static","source":{"line":229,"path":"packages/Component/init.lua"}},{"name":"GetObjectFromInstance","desc":"Returns an object of any component bound to `instance`.","params":[],"returns":[{"desc":"","lua_type":"table"}],"function_type":"static","source":{"line":292,"path":"packages/Component/init.lua"}},{"name":"new","desc":"Creates and binds a new component to `module`, `module` must have the following required members and methods:\\n\\n| Required members and methods     | Description                          |\\n| ----------- | ------------------------------------ |\\n| `.new`  | A constructor method which will be called whenever a new object is created.  |\\n| `:Destroy`     | A method which will be called on an object which is destroyed. |\\n| `Tags`   | An array of strings (CollectionService tags). |\\n\\n| Optional lifecycle methods and members     | Description  |\\n| ----------- | ------------------------------------ |\\n| `PreRenderUpdatePriority`  | An `EnumItem` used in calling the `PreRenderUpdate` method, learn more about it [here](https://developer.roblox.com/en-us/api-reference/function/RunService/BindToRenderStep).  |\\n| `:Start`  | A method which is called on an object created, just after `.new` is called for it.  |\\n| `:Stop`     | A method which is called on an object destroyed. Perform any cleanup for the object in this method |\\n| `PostSimulationUpdate`  | A method called every `RunService.Heartbeat` on an object. |\\n| `PreSimulationUpdate`  | A method called every `RunService.Stepped` on an object. |\\n| `PreRenderUpdate`  | A method called every `RunService.RenderStepped` on an object. |","params":[{"name":"module","desc":"","lua_type":"ModuleScript"}],"returns":[],"function_type":"static","source":{"line":325,"path":"packages/Component/init.lua"}},{"name":"GetObjects","desc":"Returns all the active objects in the component.","params":[],"returns":[{"desc":"","lua_type":"table"}],"function_type":"method","tags":["Component"],"source":{"line":402,"path":"packages/Component/init.lua"}},{"name":"GetObjectFromInstance","desc":"Returns an active object bound to `instance` in the component.","params":[{"name":"instance","desc":"","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"table"}],"function_type":"method","tags":["Component"],"source":{"line":414,"path":"packages/Component/init.lua"}},{"name":"Destroy","desc":"Destroys the component and renders it unusuable.\\n\\n:::warning \\nTrivial errors will occur if your code unintentionally works on a destroyed component, \\nonly call this method when you\'re done working with the component!\\n:::","params":[],"returns":[],"function_type":"method","tags":["Component"],"source":{"line":439,"path":"packages/Component/init.lua"}}],"properties":[{"name":"OnComponentAdded","desc":"A signal which is fired whenever a component is added. ","lua_type":"Signal <componentAdded : Component>","readonly":true,"source":{"line":44,"path":"packages/Component/init.lua"}},{"name":"OnComponentDestroyed","desc":"A signal which is fired whenever a component is destroyed.","lua_type":"Signal <componentDestroyed : Component>","readonly":true,"source":{"line":51,"path":"packages/Component/init.lua"}},{"name":"OnObjectAdded","desc":"A signal which is fired whenever a new object is created in the component.","lua_type":"Signal <objectAdded: table>","tags":["Component"],"readonly":true,"source":{"line":59,"path":"packages/Component/init.lua"}},{"name":"OnObjectDestroyed","desc":"A signal which is fired whenever an object of the component is destroyed. ","lua_type":"Signal  <objectDestroyed: table>","tags":["Component"],"readonly":true,"source":{"line":67,"path":"packages/Component/init.lua"}},{"name":"Tags","desc":"The reference to the `Tags` table in the class bound to the component.","lua_type":"table","tags":["Component"],"readonly":true,"source":{"line":76,"path":"packages/Component/init.lua"}}],"types":[],"name":"Component","desc":"A class which is used to bind instances to tags and extend their functionality. Components are like binders, but are\\nhandled differently.","source":{"line":37,"path":"packages/Component/init.lua"}}')}}]);