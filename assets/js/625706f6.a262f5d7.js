"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[967],{20441:function(e){e.exports=JSON.parse('{"functions":[{"name":"GetInputType","desc":"Returns the current input type of the client which will always be a member of `UserInput.InputType`.","params":[],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":106,"path":"packages/UserInput/init.lua"}}],"properties":[{"name":"OnInputTypeChange","desc":"A signal which is fired whenever the input type of the client changes. The new input type \\nwill be a string which will always be a member of `UserInput.InputType`.","lua_type":"Signal <newInputType: string>","readonly":true,"source":{"line":35,"path":"packages/UserInput/init.lua"}},{"name":"Mouse","desc":"The required mouse module.","lua_type":"table","readonly":true,"source":{"line":43,"path":"packages/UserInput/init.lua"}},{"name":"Keyboard","desc":"The required keyboard module.","lua_type":"table","readonly":true,"source":{"line":51,"path":"packages/UserInput/init.lua"}},{"name":"InputType","desc":"A dictionary of input types.\\n\\n| InputTypes   |\\n| ----------- | \\n| `Keyboard`    |\\n| `Mouse`    |\\n| `Gamepad`  |\\n| `Touch`  |","lua_type":"table","readonly":true,"source":{"line":66,"path":"packages/UserInput/init.lua"}}],"types":[],"name":"UserInput","desc":"UserInput is a useful module which should be used to retrieve input type of the client in an abstracted way\\nand provides access to other useful input modules.\\n\\n```lua\\nUserInput.OnInputTypeChange:Connect(function(newInputType)\\n\\nend)\\n\\nprint(UserInput.GetInputType())\\n```","source":{"line":26,"path":"packages/UserInput/init.lua"}}')}}]);