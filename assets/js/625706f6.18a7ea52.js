"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7967],{20441:function(e){e.exports=JSON.parse('{"functions":[{"name":"GetLastInputType","desc":"Returns the last input type of the client.","params":[],"returns":[{"desc":"","lua_type":"string ?"}],"function_type":"static","source":{"line":123,"path":"packages/UserInput/init.lua"}}],"properties":[{"name":"OnInputTypeChange","desc":"A signal which is fired whenever the input type of the client changes. ","lua_type":"Signal <newInputType: string ?>","readonly":true,"source":{"line":34,"path":"packages/UserInput/init.lua"}},{"name":"Mouse","desc":"The required mouse module.","lua_type":"table","readonly":true,"source":{"line":42,"path":"packages/UserInput/init.lua"}},{"name":"Keyboard","desc":"The required keyboard module.","lua_type":"table","readonly":true,"source":{"line":50,"path":"packages/UserInput/init.lua"}},{"name":"InputType","desc":"A dictionary of input types.\\n\\n| InputType   |\\n| ----------- | \\n| `Mouse`     | \\n| `Keyboard`  | \\n| `Gamepad`  |\\n| `Touch`  |\\n| `Accelerometer`  |\\n| `Gyro`  |\\n| `Focus`  |\\n| `TextInput`  |\\n| `InputMethod`  |","lua_type":"table","readonly":true,"source":{"line":70,"path":"packages/UserInput/init.lua"}}],"types":[],"name":"UserInput","desc":"UserInput is a module which provides access to other utility input controllers like `Mouse`, `Device` and `Keyboard`, but also\\nhas few of it\'s own methods and signals.\\n\\n```lua\\nlocal Mouse = UserInput.Mouse\\n\\nMouse.OnTargetChanged:Connect(function(newTarget)\\n\\tprint(newTarget)\\nend)\\n```","source":{"line":26,"path":"packages/UserInput/init.lua"}}')}}]);